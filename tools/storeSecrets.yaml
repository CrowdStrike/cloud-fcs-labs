AWSTemplateFormatVersion: '2010-09-09'
Description: Stores Parameters and Secrets for later use

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Falcon API Credentials
        Parameters:
          - FalconClientID
          - FalconClientSecret
          - FalconCID
          - CrowdStrikeCloud
      
    ParameterLabels:
      FalconClientID:
        default: Falcon API Client ID
      FalconClientSecret:
        default: Falcon API Secret
      FalconCID:
        default: Falcon Customer ID (CID)
      CrowdStrikeCloud:
        default: CrowdStrike Cloud

Parameters:
  FalconClientID:
    Description: Your Falcon OAuth2 Client ID.
    NoEcho: 'true'
    Type: String
    Default: ""
  FalconClientSecret:
    Description: Your Falcon OAuth2 API Secret.
    NoEcho: 'true'
    Type: String
    Default: ""
  FalconCID:
    Description: Falcon Customer ID
    NoEcho: 'true'
    Type: String
    Default: ""
  CrowdStrikeCloud:
    Type: String
    Default: ""
    #AllowedValues: [ "us-1", "us-2", "eu-1" ]
    Description: The cloud region where your Falcon CID is hosted (use either us-1, us-2, or eu-1)
    
Resources:
  CrowdStrikeSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: '/crowdstrike-falcon-api'
      Description: 'Client ID and Secret for the Falcon API'
      SecretString: !Sub |
        {
          "ApiClientId":"{$FalconClientID}", 
          "ApiSecret":"${FalconClientSecret}",
          "CID":"${FalconCID}",
          "CSCloud":"${CrowdStrikeCloud}" 
        }

  # VariableTest:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     # BucketName: 
  #     #   !If 
  #     #     - UseInputSecret
  #     #     - !Sub 'input-${FalconClientID}'
  #     #     - !Sub "secret-{{resolve:secretsmanager:/crowdstrike-falcon-api:SecretString:FalconClientId}}"
  #     BucketName: !If [UseInputSecret, !Sub '$FalconClientID', "{{resolve:secretsmanager:/crowdstrike-falcon-api:SecretString:FalconClientId}}"]

# Parameters:
#   SecretName:
#     Type: String
#     Description: The name of the existing Secrets Manager secret
#   SecretValue: 
#     Type: String
#     Description: The secret value (will be used if secret does not exist)

# Resources:
#   MyResource:
#     Type: AWS::SomeResource
#     Properties:
#       Secret: !If 
#         - SecretExists
#         - !Ref SecretManagerSecret
#         - !Ref SecretValue

#   SecretManagerSecret:
#     Type: AWS::SecretsManager::Secret
#     Properties: 
#       Name: !Ref SecretName

#   SecretExists: 
#     Fn::Exists: SecretManagerSecret